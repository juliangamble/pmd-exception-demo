<?xml version="1.0" encoding="UTF-8"?>
<pmd version="5.2.1" timestamp="2014-12-29T16:14:24.317">
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontCatchGenericException.java">
<violation beginline="12" endline="12" begincolumn="17" endcolumn="32" rule="AvoidCatchingGenericException" ruleset="Strict Exceptions" class="DontCatchGenericException" method="downCastPrimitiveType" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidCatchingGenericException" priority="3">
Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
</violation>
<violation beginline="14" endline="14" begincolumn="17" endcolumn="25" rule="AvoidCatchingGenericException" ruleset="Strict Exceptions" class="DontCatchGenericException" method="downCastPrimitiveType" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidCatchingGenericException" priority="3">
Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontCatchNPE.java">
<violation beginline="9" endline="9" begincolumn="19" endcolumn="38" rule="AvoidCatchingNPE" ruleset="Strict Exceptions" class="DontCatchNPE" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidCatchingNPE" priority="3">
Avoid catching NullPointerException; consider removing the cause of the NPE.
</violation>
<violation beginline="9" endline="9" begincolumn="19" endcolumn="38" rule="AvoidCatchingGenericException" ruleset="Strict Exceptions" class="DontCatchNPE" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidCatchingGenericException" priority="3">
Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontCatchThrowable.java">
<violation beginline="15" endline="15" begincolumn="18" endcolumn="26" rule="AvoidCatchingThrowable" ruleset="Strict Exceptions" class="DontCatchThrowable" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidCatchingThrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontDeclareThrowsExceptionInSignature.java">
<violation beginline="6" endline="6" begincolumn="50" endcolumn="58" rule="SignatureDeclareThrowsException" ruleset="Strict Exceptions" class="DontDeclareThrowsExceptionInSignature" method="methodThrowingException" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#SignatureDeclareThrowsException" priority="3">
A method/constructor shouldnt explicitly throw java.lang.Exception
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontExtendJavaLangError.java">
<violation beginline="4" endline="4" begincolumn="46" endcolumn="50" rule="DoNotExtendJavaLangError" ruleset="Strict Exceptions" class="DontExtendJavaLangError" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#DoNotExtendJavaLangError" priority="3">
Exceptions should not extend java.lang.Error
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontLoseExceptionInformation.java">
<violation beginline="10" endline="10" begincolumn="13" endcolumn="25" rule="AvoidLosingExceptionInformation" ruleset="Strict Exceptions" class="DontLoseExceptionInformation" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidLosingExceptionInformation" priority="2">
Avoid statements in a catch block that invoke accessors on the exception without using the information
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontReThrowException.java">
<violation beginline="9" endline="11" begincolumn="12" endcolumn="9" rule="AvoidRethrowingException" ruleset="Strict Exceptions" class="DontReThrowException" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidRethrowingException" priority="3">
A catch statement that catches an exception only to rethrow it should be avoided.
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontThrowExceptionInFinally.java">
<violation beginline="14" endline="18" begincolumn="9" endcolumn="9" rule="DoNotThrowExceptionInFinally" ruleset="Strict Exceptions" class="DontThrowExceptionInFinally" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#DoNotThrowExceptionInFinally" priority="4">
A throw statement in a finally block makes the control flow hard to understand.
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontThrowNPE.java">
<violation beginline="6" endline="6" begincolumn="19" endcolumn="38" rule="AvoidThrowingNullPointerException" ruleset="Strict Exceptions" class="DontThrowNPE" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidThrowingNullPointerException" priority="1">
Avoid throwing null pointer exceptions.
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontThrowNewInstanceOfSameException.java">
<violation beginline="9" endline="12" begincolumn="12" endcolumn="9" rule="AvoidThrowingNewInstanceOfSameException" ruleset="Strict Exceptions" class="DontThrowNewInstanceOfSameException" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidThrowingNewInstanceOfSameException" priority="3">
A catch statement that catches an exception only to wrap it in a new instance of the same type of exception and throw it should be avoided
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontThrowRawExceptionTypes.java">
<violation beginline="7" endline="7" begincolumn="19" endcolumn="27" rule="AvoidThrowingRawExceptionTypes" ruleset="Strict Exceptions" class="DontThrowRawExceptionTypes" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidThrowingRawExceptionTypes" priority="1">
Avoid throwing raw exception types.
</violation>
</file>
<file name="/Users/Julian/Documents/workspace_nonbook/pmd-exception-demo/src/main/java/DontUseExceptionsForFlowControl.java">
<violation beginline="15" endline="15" begincolumn="18" endcolumn="33" rule="ExceptionAsFlowControl" ruleset="Strict Exceptions" class="DontUseExceptionsForFlowControl" method="bar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#ExceptionAsFlowControl" priority="3">
Avoid using exceptions as flow control.
</violation>
</file>
</pmd>
